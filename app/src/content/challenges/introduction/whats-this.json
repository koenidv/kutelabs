{
  "$schema": "../../../schema/challenge.schema.json",
  "story": {
    "order": 1,
    "title": "Huh, what's this?",
    "description": "Let's get you started! This will be fun, trust me. <i>Just click me.</i>",
    "published": "2024-01-01T00:00:00Z",
    "color": "#FFD203",
    "imageEnd": {
      "src": "/images/character_boozle_rainbow.webp",
      "alt": "A cute human-like monster character looking astonished and throwing up a rainbow"
    },
    "dialog": {
      "static": "Hey, good to see you! I'm Boozle :)  \n  Really cool that you want to learn programming.\n\n Don't worry if all these blocks look more scary than I do - I'll explain it all in a bit.\n\n_For now, just follow my steps:_\n\n1. Drag the text input block to that really wide turquoise block\n2. Enter your name in the input\n3. Click the run button\n\n**Let's see what happens!**"
    },
    "confetti": true
  },
  "environment": {
    "language": "js",
    "appFeatures": [
      "setUsername"
    ]
  },
  "tests": [
    {
      "args": [
        []
      ],
      "run": {
        "entername": {
          "function": "({args,result})=>{if (!result) return false; const name = result.trim().toLowerCase(); if (name == 'boozle') return \"That's my name!\"; return (name && name != 'Your name here') ? true : 'Set your name in the input';}",
          "description": "Enter your name"
        }
      }
    }
  ],
  "editor": {
    "type": "mixed",
    "initialBlocks": [
      {
        "coordinates": {
          "x": 190,
          "y": 250
        },
        "block": {
          "type": "function",
          "data": {
            "name": "main",
            "nameEditable": false,
            "paramsEditable": false
          },
          "connectedBlocks": [
            {
              "on": "inner",
              "type": "variable_init",
              "draggable": false,
              "data": {
                "name": "name",
                "type": "string",
                "nameEditable": false,
                "typeEditable": false
              },
              "connectedBlocks": [
                {
                  "on": "after",
                  "type": "expression",
                  "draggable": false,
                  "data": {
                    "expression": "Println"
                  },
                  "connectedBlocks": [
                    {
                      "on": "input",
                      "type": "variable",
                      "draggable": false,
                      "data": {
                        "name": "name"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "on": "output",
              "type": "variable",
              "draggable": false,
              "data": {
                "name": "name"
              }
            }
          ]
        }
      },
      {
        "block": {
          "type": "value",
          "data": {
            "type": "string",
            "value": "",
            "placeholder": "Your name here"
          }
        },
        "coordinates": {
          "x": 460,
          "y": 320
        }
      }
    ],
    "hideDrawer": true,
    "invisibleCode": {
      "js": "async function processUsername() { const name = await main(); setUsername(name); return name; }",
      "kt": "@JsExport  @kotlin.js.ExperimentalJsExport fun processUsername(): Promise<String> = Promise { resolve, reject -> main().then { name: dynamic -> setUsername(name); resolve(name); }}"
    },
    "mainFunction": "processUsername"
  }
}