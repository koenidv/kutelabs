---
import InnerLayout from "../../layouts/InnerLayout.astro"
import ElevatedBox from "../../components/ElevatedBox.astro"
import { getCollection } from "astro:content"
import type { Challenge } from "../../schema/challenge"

const collection = (await getCollection("challenges")) as {
  id: string
  collection: string
  data: Challenge
}[]

let currentSection: (Challenge["section"] & { type: "section" }) | undefined
const challenges = collection.reduce(
  (acc, challenge) => {
    if (challenge.data.section.title != currentSection?.title) {
      currentSection = { ...challenge.data.section, type: "section" }
      if (!currentSection.hideSectionHead) acc.push(currentSection)
    }
    acc.push(challenge.data)
    return acc
  },
  [] as (Challenge | Challenge["section"])[]
)
---

<InnerLayout title="learn">
  <div class="w-full flex flex-col items-center">
    <div class="max-w-4xl w-full p-8 flex flex-col">
      <div class="pb-8">
        <h1 class="text-5xl font-poppins text-outlined text-white">Let's start learning!</h1>
        <p><a href="#">Sign up</a> to save your progress.</p>
      </div>

      <div class="w-full h-0.5 bg-black opacity-10 mb-12 mt-4"></div>

      {
        challenges.map((it, index) => {
          if ((it as any).type == "section")
            return (
              <div class="pb-4 flex flex-col items-center">
                {index > 0 && <div class="w-0.5 bg-black h-10 mb-4 opacity-50" />}
                <h3 class="text-3xl font-poppins">{it.title}</h3>
                <p>{it.description}</p>
                {index > 0 && <div class="w-0.5 bg-black h-4 mt-4 opacity-50" />}
              </div>
            )
          else {
            it = it as Challenge
            return (
              <div class="pb-4 flex flex-col items-center">
                <a href="/" class="w-full">
                  <ElevatedBox
                    elevation={2}
                    hoverable
                    class="w-full"
                    style={`background-color: ${it.story.color}`}>
                    <div class="h-40 flex flex-row items-center justify-between gap-4">
                      {it.story.imageStart ? (
                        <img
                          src={it.story.imageStart.src}
                          alt={it.story.imageStart.alt}
                          class="h-full"
                        />
                      ) : (
                        <div class="w-8" />
                      )}
                      <div class="w-full flex flex-col items-start justify-center gap-2">
                        <h1 class="text-xl font-poppins">{it.story.title}</h1>
                        <p set:html={it.story?.description} />
                      </div>
                      {it.story.imageEnd ? (
                        <img
                          src={it.story.imageEnd.src}
                          alt={it.story.imageEnd.alt}
                          class="h-full"
                        />
                      ) : (
                        <div class="w-8" />
                      )}
                    </div>
                  </ElevatedBox>
                </a>
              </div>
            )
          }
        })
      }
    </div>
  </div>
</InnerLayout>
