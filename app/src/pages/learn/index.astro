---
import InnerLayout from "../../layouts/InnerLayout.astro"
import ElevatedBox from "../../components/ElevatedBox.astro"
import type { Challenge } from "../../schema/challenge"
import { navigationStore } from "../../navigation/NavigationStore"
import { Image } from "astro:assets"
import { SignedIn, SignedOut, UserButton, SignInButton } from "@clerk/astro/components"

const challenges = await navigationStore.getChallenes()
---

<InnerLayout title="learn">
  <div class="w-full flex flex-col items-center">
    <div class="max-w-4xl w-full p-8 flex flex-col">
      <div class="pb-8">
        <h1 class="text-5xl font-poppins font-black text-outlined text-white">
          Let's start learning!
        </h1>
        <div class="h-4">
        <SignedOut isStatic={true}>
          <SignInButton mode="modal">
            <p>Sign up to save your progress.</p>
          </SignInButton>
        </SignedOut>
        <SignedIn isStatic={true}>
          <UserButton showName={true}/>
        </SignedIn>
        </div>
      </div>

      <div class="w-full h-0.5 bg-black opacity-10 mb-12 mt-4"></div>

      {
        challenges.map((it, index) => {
          if ((it as any).type == "section")
            return (
              <div class="pb-4 flex flex-col items-center">
                {index > 0 && <div class="w-0.5 bg-black h-10 mb-4 opacity-50" />}
                <h3 class="text-3xl font-poppins font-black pb-1 text-center">{it.data.title}</h3>
                <p class="text-center">{it.data.description}</p>
                {index > 0 && <div class="w-0.5 bg-black h-4 mt-4 opacity-50" />}
              </div>
            )
          else {
            const data = it.data as Challenge
            return (
              <div class="pb-4 flex flex-col items-center">
                <a
                  href={`/learn/${it.id}`}
                  class="w-full challenge-container"
                  id={it.id}
                  data-astro-prefetch>
                  <ElevatedBox
                    elevation={2}
                    hoverable
                    class="w-full bg-beige-50"
                    style={`background-color: ${data.story.color}`}>
                    <div class="min-h-40 flex flex-row items-end justify-between gap-4">
                      {data.story.imageStart ? (
                        <Image
                          src={data.story.imageStart.src}
                          alt={data.story.imageStart.alt}
                          width={160}
                          height={160}
                          class="h-full max-h-32 lg:max-h-40 w-32 lg:w-40 aspect-square object-cover"
                        />
                      ) : (
                        <div class="w-8" />
                      )}
                      <div class="w-full h-full flex flex-col items-start justify-center gap-2 py-4 min-h-40">
                        <h1 class="text-xl font-poppins font-black" id="title">
                          {data.story.title}
                        </h1>
                        <p set:html={data.story?.description} />
                      </div>
                      {data.story.imageEnd ? (
                        <Image
                          src={data.story.imageEnd.src}
                          alt={data.story.imageEnd.alt}
                          width={160}
                          height={160}
                          class="h-full max-h-32 lg:max-h-40 aspect-square object-cover"
                        />
                      ) : (
                        <div class="w-8" />
                      )}
                    </div>
                  </ElevatedBox>
                </a>
              </div>
            )
          }
        })
      }
    </div>
  </div>
</InnerLayout>

<script>
import { getCompletedChallenges } from "../../state/completedChallenges"
  (await getCompletedChallenges()).forEach(id => {
    const container = document.querySelector(`#${CSS.escape(id)}.challenge-container`)
    if (!container) return
    container.classList.add("completed")
    const title = container.querySelector("#title") as HTMLHeadingElement
    if (!title) return
    title.innerText += " âœ…"
  })
</script>
