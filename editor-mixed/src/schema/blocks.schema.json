{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/koenidv/kutelabs/refs/heads/main/editor-mixed/schema/blocks.schema.json",
  "title": "Mixed Content Editor Block",
  "description": "Block within the mixed content editor",
  "type": "object",
  "$defs": {
    "dataType": {
      "description": "Value type (from ValueDataType)",
      "type": "string",
      "enum": [
        "int",
        "float",
        "string",
        "boolean",
        "array<int>",
        "array<float>",
        "array<string>",
        "array<boolean>",
        "dynamic"
      ]
    },
    "AnyBlock": {
      "type": "object",
      "allOf": [
        {
          "oneOf": [
            {
              "$ref": "#/$defs/FunctionBlock"
            },
            {
              "$ref": "#/$defs/ExpressionBlock"
            },
            {
              "$ref": "#/$defs/ValueBlock"
            },
            {
              "$ref": "#/$defs/VariableInitBlock"
            },
            {
              "$ref": "#/$defs/VariableSetBlock"
            },
            {
              "$ref": "#/$defs/VariableBlock"
            },
            {
              "$ref": "#/$defs/ConditionalBlock"
            },
            {
              "$ref": "#/$defs/LoopBlock"
            },
            {
              "$ref": "#/$defs/LogicNotBlock"
            },
            {
              "$ref": "#/$defs/LogicJunctionBlock"
            },
            {
              "$ref": "#/$defs/LogicComparisonBlock"
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "draggable": {
              "type": "boolean",
              "description": "Set to false to disable dragging this block"
            }
          }
        }
      ]
    },
    "AnyBlockSingle": {
      "type": "object",
      "description": "A block without connected Blocks. Use \"type\" to determine the type of block",
      "$ref": "#/$defs/AnyBlock"
    },
    "AnyBlockConnected": {
      "type": "object",
      "description": "A block. Use \"type\" to determine the type of block",
      "allOf": [
        {
          "$ref": "#/$defs/AnyBlock"
        },
        {
          "properties": {
            "connectedBlocks": {
              "description": "Connected Blocks",
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "on": {
                        "description": "Connector on this block",
                        "$ref": "./connector.schema.json"
                      }
                    },
                    "required": [
                      "on",
                      "type"
                    ]
                  },
                  {
                    "description": "Connected Block",
                    "$ref": "#/$defs/AnyBlockConnected"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "FunctionBlock": {
      "type": "object",
      "description": "Function Block",
      "properties": {
        "type": {
          "description": "Defines this block as a function block",
          "type": "string",
          "const": "function"
        },
        "data": {
          "description": "Function Block Data",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the function",
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "inner",
                  "input",
                  "output"
                ]
              }
            },
            "required": [
              "on",
              "type"
            ]
          }
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "ExpressionBlock": {
      "type": "object",
      "description": "Expression Block",
      "properties": {
        "type": {
          "description": "Defines this block as an expression block",
          "type": "string",
          "const": "expression"
        },
        "data": {
          "description": "Expression Block Data",
          "type": "object",
          "properties": {
            "expression": {
              "description": "Standard expression to be evaluated or Custom to use customExpression",
              "type": "string",
              "enum": [
                "Custom",
                "Println"
              ]
            },
            "customExpression": {
              "description": "Custom expression to be evaluated",
              "type": "object",
              "properties": {
                "kt": {
                  "type": "string"
                },
                "js": {
                  "type": "string"
                }
              },
              "additionalProperties": {
                "type": "string"
              }
            },
            "editable": {
              "oneOf": [
                {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string"
                    },
                    "linesHeight": {
                      "type": "number"
                    },
                    "maxLines": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "lang"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": [
            "expression"
          ],
          "additionalProperties": false
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "after",
                  "input"
                ]
              }
            },
            "required": [
              "on",
              "type"
            ]
          }
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "ValueBlock": {
      "type": "object",
      "description": "Value Block",
      "properties": {
        "type": {
          "description": "Defines this block as an value block",
          "type": "string",
          "const": "value"
        },
        "data": {
          "description": "Value Block Data",
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/$defs/dataType"
            }
          },
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "int"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "float"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "number"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "string"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "boolean"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "array<int>"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "array<float>"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "array<string>"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "array<boolean>"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "dynamic"
                  }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "required": [
            "type",
            "value"
          ]
        },
        "connectedBlocks": {
          "description": "Value blocks can't have downstream connected blocks",
          "type": "null",
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "VariableInitBlock": {
      "type": "object",
      "description": "Variable Init Block",
      "properties": {
        "type": {
          "description": "Defines this block as an variable block",
          "type": "string",
          "const": "variable_init"
        },
        "data": {
          "description": "Variable Block Data",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the variable",
              "type": "string"
            },
            "type": {
              "$ref": "#/$defs/dataType"
            },
            "mutable": {
              "description": "If the variable is mutable, defaults to true",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "type"
          ],
          "additionalProperties": false
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "after",
                  "input"
                ]
              }
            },
            "required": [
              "on",
              "type"
            ]
          }
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "VariableSetBlock": {
      "type": "object",
      "description": "Variable Set Block",
      "properties": {
        "type": {
          "description": "Defines this block as an variable block",
          "type": "string",
          "const": "variable_set"
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "after",
                  "inner",
                  "input"
                ]
              }
            },
            "allOf": [
              {
                "if": {
                  "properties": {
                    "on": {
                      "const": "inner"
                    }
                  }
                },
                "then": {
                  "description": "Variable to apply this value to",
                  "properties": {
                    "type": {
                      "description": "Inner connected block must be a variable block",
                      "const": "variable"
                    }
                  }
                }
              }
            ],
            "required": [
              "on",
              "type"
            ]
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "VariableBlock": {
      "type": "object",
      "description": "Variable Block. You must include a Variable Init Block to initialize the variable",
      "properties": {
        "type": {
          "description": "Defines this block as an variable block",
          "type": "string",
          "const": "variable"
        },
        "data": {
          "description": "Variable Block Data",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the variable",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "connectedBlocks": {
          "description": "Variable blocks can't have downstream connected blocks",
          "type": "null",
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "ConditionalBlock": {
      "type": "object",
      "description": "Conditional Block",
      "properties": {
        "type": {
          "description": "Defines this block as a conditional block",
          "type": "string",
          "const": "conditional"
        },
        "elsebranch": {
          "description": "Include else branch?",
          "type": "boolean"
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "conditional",
                  "ifTrue",
                  "ifFalse",
                  "after"
                ]
              }
            },
            "required": [
              "on",
              "type"
            ]
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LoopBlock": {
      "type": "object",
      "description": "Loop Block",
      "properties": {
        "type": {
          "description": "Defines this block as a loop block",
          "type": "string",
          "const": "loop"
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "inner",
                  "input"
                ]
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LogicNotBlock": {
      "type": "object",
      "description": "\"Not\" Logic Block",
      "properties": {
        "type": {
          "description": "Defines this block as a Logic Not block",
          "type": "string",
          "const": "logic_not"
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "conditional"
                ]
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LogicJunctionBlock": {
      "type": "object",
      "description": "Junction Logic Block",
      "properties": {
        "type": {
          "description": "Defines this block as a Logic Junction block",
          "type": "string",
          "const": "logic_junction"
        },
        "data": {
          "description": "Junction Logic Block Data",
          "type": "object",
          "properties": {
            "mode": {
              "description": "Mode of junction",
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            }
          },
          "required": [
            "mode"
          ]
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "conditionalInput"
                ]
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LogicComparisonBlock": {
      "type": "object",
      "description": "Comparison Logic Block",
      "properties": {
        "type": {
          "description": "Defines this block as a Logic Comparison block",
          "type": "string",
          "const": "logic_comparison"
        },
        "data": {
          "description": "Comparison Logic Block Data",
          "type": "object",
          "properties": {
            "mode": {
              "description": "Mode of comparison",
              "type": "string",
              "enum": [
                "==",
                "!=",
                "<",
                "<=",
                ">",
                ">="
              ]
            }
          },
          "required": [
            "mode"
          ]
        },
        "connectedBlocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "on": {
                "enum": [
                  "comparisonInput"
                ]
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/AnyBlockConnected"
    }
  ]
}